/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  1771: {
    Groth16Verifier: {
      address: "0xa4DfF80B4a1D748BF28BC4A271eD834689Ea3407",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256[2]",
              name: "_pA",
              type: "uint256[2]",
            },
            {
              internalType: "uint256[2][2]",
              name: "_pB",
              type: "uint256[2][2]",
            },
            {
              internalType: "uint256[2]",
              name: "_pC",
              type: "uint256[2]",
            },
            {
              internalType: "uint256[3]",
              name: "_pubSignals",
              type: "uint256[3]",
            },
          ],
          name: "verifyProof",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    SBT: {
      address: "0xe336d36FacA76840407e6836d26119E1EcE0A2b4",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "AlreadyOwned",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "ERC721IncorrectOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "ERC721InsufficientApproval",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "approver",
              type: "address",
            },
          ],
          name: "ERC721InvalidApprover",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
          ],
          name: "ERC721InvalidOperator",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "ERC721InvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "receiver",
              type: "address",
            },
          ],
          name: "ERC721InvalidReceiver",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
          ],
          name: "ERC721InvalidSender",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "ERC721NonexistentToken",
          type: "error",
        },
        {
          inputs: [],
          name: "ErrLocked",
          type: "error",
        },
        {
          inputs: [],
          name: "ErrNotFound",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidData",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "approved",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "approved",
              type: "bool",
            },
          ],
          name: "ApprovalForAll",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "Locked",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "issueDate",
              type: "uint256",
            },
          ],
          name: "SBTCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "Unlocked",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "approved",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "issueDate",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "surname",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "birthDate",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "birthPlace",
                  type: "string",
                },
                {
                  internalType: "bool",
                  name: "isAdmin",
                  type: "bool",
                },
              ],
              internalType: "struct ISBT.SBTData",
              name: "_data",
              type: "tuple",
            },
          ],
          name: "createSBT",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "getApproved",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "getSBTData",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "issueDate",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "surname",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "birthDate",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "birthPlace",
                  type: "string",
                },
                {
                  internalType: "bool",
                  name: "isAdmin",
                  type: "bool",
                },
              ],
              internalType: "struct ISBT.SBTData",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "hasSBT",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
          ],
          name: "isApprovedForAll",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "locked",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nextSBTId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "ownerOf",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "safeTransferFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "safeTransferFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "sbts",
          outputs: [
            {
              internalType: "uint256",
              name: "issueDate",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "surname",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "birthDate",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "birthPlace",
              type: "string",
            },
            {
              internalType: "bool",
              name: "isAdmin",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              internalType: "bool",
              name: "approved",
              type: "bool",
            },
          ],
          name: "setApprovalForAll",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "interfaceId",
              type: "bytes4",
            },
          ],
          name: "supportsInterface",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "tokenURI",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        approve: "contracts/ERC5192.sol",
        balanceOf: "contracts/ERC5192.sol",
        getApproved: "contracts/ERC5192.sol",
        isApprovedForAll: "contracts/ERC5192.sol",
        locked: "contracts/ERC5192.sol",
        name: "contracts/ERC5192.sol",
        ownerOf: "contracts/ERC5192.sol",
        safeTransferFrom: "contracts/ERC5192.sol",
        setApprovalForAll: "contracts/ERC5192.sol",
        supportsInterface: "contracts/ERC5192.sol",
        symbol: "contracts/ERC5192.sol",
        tokenURI: "contracts/ERC5192.sol",
        transferFrom: "contracts/ERC5192.sol",
        createSBT: "contracts/interfaces/ISBT.sol",
        getSBTData: "contracts/interfaces/ISBT.sol",
        totalSupply: "contracts/interfaces/ISBT.sol",
      },
    },
    VotationManager: {
      address: "0xA4cD3b0Eb6E5Ab5d8CE4065BcCD70040ADAB1F00",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256",
              name: "candidateId",
              type: "uint256",
            },
          ],
          name: "InvalidCandidate",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidName",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidTimeInterval",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidVerifierAddress",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidVote",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "votationId",
              type: "uint256",
            },
          ],
          name: "VotationAlreadyActive",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "votationId",
              type: "uint256",
            },
          ],
          name: "VotationAlreadyExists",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "votationId",
              type: "uint256",
            },
          ],
          name: "VotationNotActive",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "votationId",
              type: "uint256",
            },
          ],
          name: "VotationNotFound",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "votationId",
              type: "uint256",
            },
          ],
          name: "VotingWindowClosed",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "votationId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "name",
              type: "string",
            },
          ],
          name: "VotationClosed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "votationId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
          ],
          name: "VotationCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "votationId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
          ],
          name: "VotationStarted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "votationId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "voter",
              type: "address",
            },
          ],
          name: "VoteCast",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "votationId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "voter",
              type: "address",
            },
          ],
          name: "VoteVerified",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "votationId",
              type: "uint256",
            },
          ],
          name: "checkVotingWindow",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "isActive",
                  type: "bool",
                },
                {
                  internalType: "uint256[]",
                  name: "candidates",
                  type: "uint256[]",
                },
              ],
              internalType: "struct IVotationManager.Votation",
              name: "_newVotation",
              type: "tuple",
            },
          ],
          name: "createVotation",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "votationId",
              type: "uint256",
            },
          ],
          name: "getVotation",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "isActive",
                  type: "bool",
                },
                {
                  internalType: "uint256[]",
                  name: "candidates",
                  type: "uint256[]",
                },
              ],
              internalType: "struct IVotationManager.Votation",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "votationId",
              type: "uint256",
            },
          ],
          name: "startVotation",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[2]",
              name: "a",
              type: "uint256[2]",
            },
            {
              internalType: "uint256[2][2]",
              name: "b",
              type: "uint256[2][2]",
            },
            {
              internalType: "uint256[2]",
              name: "c",
              type: "uint256[2]",
            },
            {
              internalType: "uint256[3]",
              name: "input",
              type: "uint256[3]",
            },
            {
              internalType: "address",
              name: "verifyContract",
              type: "address",
            },
          ],
          name: "verifyVote",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "votationCandidatesVotes",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "votationId",
              type: "uint256",
            },
          ],
          name: "votationResults",
          outputs: [
            {
              internalType: "uint256[]",
              name: "candidateIds",
              type: "uint256[]",
            },
            {
              internalType: "uint256[]",
              name: "votes",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "votations",
          outputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isActive",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "votationId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "candidateId",
              type: "uint256",
            },
            {
              internalType: "uint256[2]",
              name: "a",
              type: "uint256[2]",
            },
            {
              internalType: "uint256[2][2]",
              name: "b",
              type: "uint256[2][2]",
            },
            {
              internalType: "uint256[2]",
              name: "c",
              type: "uint256[2]",
            },
            {
              internalType: "uint256[3]",
              name: "input",
              type: "uint256[3]",
            },
            {
              internalType: "address",
              name: "verifyContract",
              type: "address",
            },
          ],
          name: "vote",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        checkVotingWindow: "contracts/interfaces/IVotationManager.sol",
        createVotation: "contracts/interfaces/IVotationManager.sol",
        getVotation: "contracts/interfaces/IVotationManager.sol",
        startVotation: "contracts/interfaces/IVotationManager.sol",
        verifyVote: "contracts/interfaces/IVotationManager.sol",
        votationResults: "contracts/interfaces/IVotationManager.sol",
        vote: "contracts/interfaces/IVotationManager.sol",
      },
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
